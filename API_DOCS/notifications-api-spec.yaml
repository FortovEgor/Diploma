openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /users:
    get:
      tags:
      - user-controller
      operationId: getUserIdsByName
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: integer
                  format: int64
    put:
      tags:
      - user-controller
      operationId: put
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int64
    post:
      tags:
      - user-controller
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewUserRequest"
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDto"
  /notifications:
    put:
      tags:
      - notifications-controller
      operationId: updateNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateNotificationRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Notification"
    post:
      tags:
      - notifications-controller
      operationId: createNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateNotificationRequest"
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Notification"
  /users/{id}:
    get:
      tags:
      - user-controller
      operationId: getUserById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserFullInfoDto"
  /users/usersIds:
    get:
      tags:
      - user-controller
      operationId: getUserIdsByUsernameAndPassword
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      - name: password
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: integer
                  format: int64
  /users/notexisting:
    get:
      tags:
      - user-controller
      operationId: getNotExistingUsersByIds
      parameters:
      - name: ids
        in: query
        required: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: integer
                  format: int64
  /users/info:
    get:
      tags:
      - user-controller
      operationId: getUsersByIds
      parameters:
      - name: ids
        in: query
        required: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserDtoPartial"
  /notifications/{notificationIds}:
    get:
      tags:
      - notifications-controller
      operationId: getNotificationsFullData
      parameters:
      - name: notificationIds
        in: path
        required: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Notification"
  /notifications/{notificationId}:
    delete:
      tags:
      - notifications-controller
      operationId: deleteNotification
      parameters:
      - name: notificationId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: No Content
  /notifications/array/{notificationIds}:
    delete:
      tags:
      - notifications-controller
      operationId: deleteNotifications
      parameters:
      - name: notificationIds
        in: path
        required: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      responses:
        "204":
          description: No Content
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        password:
          type: string
        organization:
          type: string
        avatar:
          type: integer
          format: int32
        about:
          type: string
    UpdateNotificationRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
        content:
          type: string
        time_to_show:
          type: string
        interval_to_repeat:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            zero:
              type: boolean
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            units:
              type: array
              items:
                type: object
                properties:
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
                  dateBased:
                    type: boolean
        userId:
          type: integer
          format: int64
        immediately:
          type: boolean
    Notification:
      required:
      - content
      - userId
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
        content:
          type: string
        time_to_show:
          type: string
          format: date-time
        interval_to_repeat:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            zero:
              type: boolean
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            units:
              type: array
              items:
                type: object
                properties:
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
                  dateBased:
                    type: boolean
        userId:
          type: integer
          format: int64
        immediately:
          type: boolean
    NewUserRequest:
      required:
      - email
      - name
      - password
      - phone
      type: object
      properties:
        name:
          maxLength: 250
          minLength: 2
          type: string
        email:
          maxLength: 100
          minLength: 6
          type: string
        phone:
          type: string
        password:
          maxLength: 40
          minLength: 8
          type: string
    UserDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        phone:
          type: string
    CreateNotificationRequest:
      required:
      - content
      - type
      - userId
      type: object
      properties:
        type:
          type: string
        content:
          type: string
        time_to_show:
          type: string
        interval_to_repeat:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            zero:
              type: boolean
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            units:
              type: array
              items:
                type: object
                properties:
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
                  dateBased:
                    type: boolean
        userId:
          type: integer
          format: int64
        immediately:
          type: boolean
    UserFullInfoDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        organization:
          type: string
        avatar:
          type: integer
          format: int32
        about:
          type: string
    UserDtoPartial:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        avatar:
          type: integer
          format: int32
